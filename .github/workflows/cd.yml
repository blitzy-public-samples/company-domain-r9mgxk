name: Continuous Deployment

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authenticate with Google Cloud
      run: |
        gcloud auth configure-docker

    - name: Build and push Docker images
      run: |
        docker build -t gcr.io/$PROJECT_ID/app:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/app:${{ github.sha }}

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

    - name: Deploy to GKE
      run: |
        kubectl set image deployment/app app=gcr.io/$PROJECT_ID/app:${{ github.sha }}
        kubectl rollout status deployment/app

    - name: Update database schemas
      run: |
        # HUMAN ASSISTANCE NEEDED
        # Add commands to update database schemas if needed
        # Example: kubectl exec -it <pod-name> -- python manage.py migrate

    - name: Run post-deployment checks
      run: |
        # HUMAN ASSISTANCE NEEDED
        # Add commands to run post-deployment checks
        # Example: kubectl exec -it <pod-name> -- python manage.py test

    - name: Notify team of deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: Deployment to GCP ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}